문제점1 = Position: sticky 를 이용하여 장바구니를 가게옆에 붙여 스크롤 내려도 
	따라오게 하였으나, 가게 Div는 위에 공백이 생기게 되었다. 미디어 쿼리를
	이용하여 장바구니 Div의 height 높일 때마다, 공백도 커짐.

Solution = 모든 마진 패딩을 지우면 해결되나, 장바구니가 문제점2 처럼 일그러진다.
	 이틀동안 많은 고민끝에 가게 Div 자체에도 Position을 relative로 주어 top
	 을 이용해 맞추고 z-index를 최하위로 주어 해결하였다.


문제점2 = 장바구니에 음식을 추가하면 할수록 div를 벗어나 밑으로 침범함.

Solution = 장바구니 음식들을 모두 잡아주는 Div를 추가하고 밑에 총 가격 주문 버튼
	 의 포지션을 지우고 위치값도 지워 해결함.


문제점3 = 요기요 탭메뉴 클릭시 버튼 밑에 색을 넣고 싶었으나 해당 버튼 컴포넌트를 Select
	하고 어떻게 CSS를 줄지 고민함.

Solution = 스타일드 컴포넌트를 사용하고 있어 proprs로 전달하는 쪽을 택하였고 삼항연산자를
	 이용하여 버튼 밑줄에 색을 넣는건 border-bottom 을 이용하여 "5px solid 삼항연산자"
	 로 밑줄을 줄려했으나, false 경우 null이나 아무 색을 넣어도 버튼이 망가져 버려서 고민
	 하다가 1px 를 줬더니 해결 원인은 형식에 맞지 않게 값을 주어서 오류로 작동되지 않게
	 하고 border: 1px solid 색 으로 커버함.


문제점4 = 리액트 쿼리를 이용하여 get 통신을 처음으로 실행해 보았으나, 실패할때마다 무한으로
	 받아오는걸 확인 문제점을 해결하고자 공식문서를 읽던중 retry 옵션을 사용 하지만 해
	 결되지 않음. 하나씩 넣던중 refetchOnWindowFocus 를 사용하여 멈추게 만듬.

Solution = 멘토님이 말해주시길 3가지 옵션을 모두 사용하여 재통신을 막는다고 하였다. 그중 하나가
	 retry. 검색해보니 refetchOnWindowFocus, refetchOnReconnect, retry, retryDelay 가 있었
	 고 모두 적용하니 해결할 수 있었다.
	 

문제점5 = atom에서 useRecoilState 를 이용해 setter에서 이전 값과 현재 받은	 값이 쌓이도록
	 하기위해 spread 연산자를 사용 (...) 하지만 이터레이터 문제가 발생하였다. 이때 난
	 이터레이터를 잘 몰랐고 이터레이터는 객체이며 배열이나 유사한 자료 구조의 내부
	 요소를 순회하는데 여기서 내게 발생한 문제점은 객체에는 반드시 하나의 Symbol.
	 iterator의 값을 반복할 수 있다는 것이다.
	
Solution = setReceipt([...receipt, {name: menu.name, price: menu.price}]) 여기서 receipt의
	 디폴트값이 default: {name: '', price: null, id: null} 이였기에 배열로 감싸 spread
	 연산시 배열안에 쌓일수 있도록 하였고, 이 코드를 run 할시, 0번째 객체는 
	 디폴트 값이 되기에, arr.length 를 이용해 예외처리를 하여 해결하였다.
	 
	 
문제점6 = 메뉴 리스트로 뿌려줄려함,  커링 함수   피터님꺼 보고 참고


문제점7 = object object 그거 걍 커링함수로 하니 해결


//////////////////////////////////



제가 맡은 역할은 푸드트럭 가게 설정 CRUD 와 푸드트럭 가게  메뉴 CRUD 그리고 담긴 메뉴와 정보들이 
푸드트럭 가게 메뉴 탭과 정보 탭 페이지에서 읽을수 있는 기능 구현입니다

그리고 푸드트럭 가게 설정 페이지에서 다른 유저의 설정 값을 열람, 수정 못하도록 WithAuth 기능을 구현했습니다

제가 맡은 기능 역할은 여기까지입니다


//////////////////////////////////////////

가게 추가 기능 서비스는 사용자가 푸드트럭 운영을 시작함에 있어 가장 먼저 거쳐야할 과정으로 필수 정보를 입력해
가게를 등록할 수 있는 서비스입니다.


가게 수정 기능 서비스는 사용자가 전 정보와 비교하여 푸드트럭의 정보들을 수정할수 있는 서비스 입니다.


가게 삭제 기능 서비스는 사용자가 가게를 삭제하여 영업을 폐업할수 있는 서비스 입니다.


메뉴 추가 기능은 가게를 추가한 후 메뉴 필수정보인 이름,정보,가격 을 적어 추가하는 서비스 입니다.


메뉴 수정 기능은 메뉴를 추가한 이후 필수정보입력해 메뉴 정보를 수정하는 서비스입니다.


메뉴 삭제 기능은 메뉴를 추가한 이후 삭제하고자 할때 삭제하는 서비스입니다.


가게 설정 보안 서비스는 유저가 다른 유저의 푸드트럭 정보를 관람 혹은 수정하는걸 방지하는 서비스입니다.









	 